tipo,lexema
UNKNOWN,
NEWLINE,"
"
STRING_TRIPLE,"""""""
Este es un ejemplo que muestra todos los tipos de tokens en Python
para probar el analizador léxico.
"""""""
UNKNOWN,
NEWLINE,"
"
UNKNOWN,
NEWLINE,"
"
KEYWORD,def
WHITESPACE, 
IDENTIFIER,ejemplo_keywords
DELIMITER,(
DELIMITER,)
DELIMITER,:
UNKNOWN,
NEWLINE,"
"
WHITESPACE,    
KEYWORD,if
WHITESPACE, 
IDENTIFIER,True
DELIMITER,:
UNKNOWN,
NEWLINE,"
"
WHITESPACE,        
KEYWORD,pass
UNKNOWN,
NEWLINE,"
"
WHITESPACE,    
KEYWORD,elif
WHITESPACE, 
IDENTIFIER,False
DELIMITER,:
UNKNOWN,
NEWLINE,"
"
WHITESPACE,        
KEYWORD,pass
UNKNOWN,
NEWLINE,"
"
WHITESPACE,    
KEYWORD,else
DELIMITER,:
UNKNOWN,
NEWLINE,"
"
WHITESPACE,        
KEYWORD,pass
UNKNOWN,
NEWLINE,"
"
WHITESPACE,    
UNKNOWN,
NEWLINE,"
"
WHITESPACE,    
KEYWORD,for
WHITESPACE, 
IDENTIFIER,i
WHITESPACE, 
KEYWORD,in
WHITESPACE, 
IDENTIFIER,range
DELIMITER,(
NUMBER_INT,10
DELIMITER,)
DELIMITER,:
UNKNOWN,
NEWLINE,"
"
WHITESPACE,        
KEYWORD,continue
UNKNOWN,
NEWLINE,"
"
WHITESPACE,    
UNKNOWN,
NEWLINE,"
"
WHITESPACE,    
KEYWORD,while
WHITESPACE, 
IDENTIFIER,False
DELIMITER,:
UNKNOWN,
NEWLINE,"
"
WHITESPACE,        
KEYWORD,break
UNKNOWN,
NEWLINE,"
"
WHITESPACE,    
UNKNOWN,
NEWLINE,"
"
WHITESPACE,    
KEYWORD,try
DELIMITER,:
UNKNOWN,
NEWLINE,"
"
WHITESPACE,        
KEYWORD,raise
WHITESPACE, 
IDENTIFIER,Exception
DELIMITER,(
DELIMITER,)
UNKNOWN,
NEWLINE,"
"
WHITESPACE,    
KEYWORD,except
WHITESPACE, 
IDENTIFIER,Exception
WHITESPACE, 
KEYWORD,as
WHITESPACE, 
IDENTIFIER,e
DELIMITER,:
UNKNOWN,
NEWLINE,"
"
WHITESPACE,        
KEYWORD,pass
UNKNOWN,
NEWLINE,"
"
WHITESPACE,    
KEYWORD,finally
DELIMITER,:
UNKNOWN,
NEWLINE,"
"
WHITESPACE,        
KEYWORD,pass
UNKNOWN,
NEWLINE,"
"
WHITESPACE,    
UNKNOWN,
NEWLINE,"
"
WHITESPACE,    
KEYWORD,class
WHITESPACE, 
IDENTIFIER,MiClase
DELIMITER,:
UNKNOWN,
NEWLINE,"
"
WHITESPACE,        
KEYWORD,def
WHITESPACE, 
IDENTIFIER,__init__
DELIMITER,(
IDENTIFIER,self
DELIMITER,)
DELIMITER,:
UNKNOWN,
NEWLINE,"
"
WHITESPACE,            
IDENTIFIER,self
DELIMITER,.
IDENTIFIER,valor
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
IDENTIFIER,None
UNKNOWN,
NEWLINE,"
"
WHITESPACE,    
UNKNOWN,
NEWLINE,"
"
WHITESPACE,    
KEYWORD,return
WHITESPACE, 
KEYWORD,lambda
WHITESPACE, 
IDENTIFIER,x
DELIMITER,:
WHITESPACE, 
IDENTIFIER,x
WHITESPACE, 
OPERATOR,+
WHITESPACE, 
NUMBER_INT,1
UNKNOWN,
NEWLINE,"
"
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,variable_normal
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,10
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,_variable_con_guion_bajo
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,20
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,CamelCase
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,30
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,snake_case_variable
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,40
UNKNOWN,
NEWLINE,"
"
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,entero
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,42
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,entero_negativo
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
OPERATOR,-
NUMBER_INT,42
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,entero_grande
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,1000000
UNKNOWN,
NEWLINE,"
"
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,flotante
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_FLOAT,3.14
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,flotante_notacion
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_FLOAT,1.5e10
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,flotante_negativo
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
OPERATOR,-
NUMBER_FLOAT,0.5
UNKNOWN,
NEWLINE,"
"
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,hexadecimal
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_HEX,0xFF
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,binario
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_BIN,0b1010
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,octal
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_OCT,0o755
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,complejo
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,3
OPERATOR,+
NUMBER_INT,4
IDENTIFIER,j
UNKNOWN,
NEWLINE,"
"
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,cadena_simple
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
STRING,'Esto es una cadena con comillas simples'
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,cadena_doble
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
STRING,"""Esto es una cadena con comillas dobles"""
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,cadena_triple
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
STRING_TRIPLE,"""""""Esta es una cadena
con múltiples líneas
usando comillas triples dobles"""""""
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,cadena_triple_simple
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
STRING_TRIPLE,"'''Otra cadena
con múltiples líneas
usando comillas triples simples'''"
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,cadena_f
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
STRING_F,"f""El valor es {variable_normal}"""
UNKNOWN,
NEWLINE,"
"
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,suma
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,5
WHITESPACE, 
OPERATOR,+
WHITESPACE, 
NUMBER_INT,3
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,resta
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,5
WHITESPACE, 
OPERATOR,-
WHITESPACE, 
NUMBER_INT,3
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,multiplicacion
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,5
WHITESPACE, 
OPERATOR,*
WHITESPACE, 
NUMBER_INT,3
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,division
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,5
WHITESPACE, 
OPERATOR,/
WHITESPACE, 
NUMBER_INT,3
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,division_entera
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,5
WHITESPACE, 
OPERATOR,//
WHITESPACE, 
NUMBER_INT,3
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,modulo
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,5
WHITESPACE, 
OPERATOR,%
WHITESPACE, 
NUMBER_INT,3
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,potencia
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,5
WHITESPACE, 
OPERATOR,**
WHITESPACE, 
NUMBER_INT,3
UNKNOWN,
NEWLINE,"
"
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,igual
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,5
WHITESPACE, 
OPERATOR,==
WHITESPACE, 
NUMBER_INT,3
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,diferente
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,5
WHITESPACE, 
OPERATOR,!=
WHITESPACE, 
NUMBER_INT,3
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,mayor
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,5
WHITESPACE, 
OPERATOR,>
WHITESPACE, 
NUMBER_INT,3
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,menor
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,5
WHITESPACE, 
OPERATOR,<
WHITESPACE, 
NUMBER_INT,3
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,mayor_igual
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,5
WHITESPACE, 
OPERATOR,>=
WHITESPACE, 
NUMBER_INT,3
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,menor_igual
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,5
WHITESPACE, 
OPERATOR,<=
WHITESPACE, 
NUMBER_INT,3
UNKNOWN,
NEWLINE,"
"
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,and_logico
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
IDENTIFIER,True
WHITESPACE, 
KEYWORD,and
WHITESPACE, 
IDENTIFIER,False
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,or_logico
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
IDENTIFIER,True
WHITESPACE, 
KEYWORD,or
WHITESPACE, 
IDENTIFIER,False
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,not_logico
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
KEYWORD,not
WHITESPACE, 
IDENTIFIER,True
UNKNOWN,
NEWLINE,"
"
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,x
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,10
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,x
WHITESPACE, 
OPERATOR,+=
WHITESPACE, 
NUMBER_INT,5
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,x
WHITESPACE, 
OPERATOR,-=
WHITESPACE, 
NUMBER_INT,2
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,x
WHITESPACE, 
OPERATOR,*=
WHITESPACE, 
NUMBER_INT,3
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,x
WHITESPACE, 
OPERATOR,/=
WHITESPACE, 
NUMBER_INT,2
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,x
WHITESPACE, 
OPERATOR,//=
WHITESPACE, 
NUMBER_INT,2
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,x
WHITESPACE, 
OPERATOR,%=
WHITESPACE, 
NUMBER_INT,3
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,x
WHITESPACE, 
OPERATOR,**=
WHITESPACE, 
NUMBER_INT,2
UNKNOWN,
NEWLINE,"
"
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,bit_and
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,5
WHITESPACE, 
OPERATOR,&
WHITESPACE, 
NUMBER_INT,3
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,bit_or
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,5
WHITESPACE, 
OPERATOR,|
WHITESPACE, 
NUMBER_INT,3
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,bit_xor
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,5
WHITESPACE, 
OPERATOR,^
WHITESPACE, 
NUMBER_INT,3
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,bit_not
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
OPERATOR,~
NUMBER_INT,5
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,bit_shift_left
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,5
WHITESPACE, 
OPERATOR,<<
WHITESPACE, 
NUMBER_INT,1
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,bit_shift_right
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,5
WHITESPACE, 
OPERATOR,>>
WHITESPACE, 
NUMBER_INT,1
UNKNOWN,
NEWLINE,"
"
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,lista
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
DELIMITER,[
NUMBER_INT,1
DELIMITER,","
WHITESPACE, 
NUMBER_INT,2
DELIMITER,","
WHITESPACE, 
NUMBER_INT,3
DELIMITER,]
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,tupla
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
DELIMITER,(
NUMBER_INT,1
DELIMITER,","
WHITESPACE, 
NUMBER_INT,2
DELIMITER,","
WHITESPACE, 
NUMBER_INT,3
DELIMITER,)
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,diccionario
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
DELIMITER,{
STRING,"""clave"""
DELIMITER,:
WHITESPACE, 
STRING,"""valor"""
DELIMITER,}
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,conjunto
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
DELIMITER,{
NUMBER_INT,1
DELIMITER,","
WHITESPACE, 
NUMBER_INT,2
DELIMITER,","
WHITESPACE, 
NUMBER_INT,3
DELIMITER,}
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,llamada_funcion
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
IDENTIFIER,print
DELIMITER,(
STRING,"""Hola"""
DELIMITER,)
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,indice
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
IDENTIFIER,lista
DELIMITER,[
NUMBER_INT,0
DELIMITER,]
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,atributo
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
IDENTIFIER,objeto
DELIMITER,.
IDENTIFIER,atributo
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,punto_y_coma
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
NUMBER_INT,1
DELIMITER,;
WHITESPACE, 
NUMBER_INT,2
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,dos_puntos
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
DELIMITER,{
STRING,"""a"""
DELIMITER,:
WHITESPACE, 
NUMBER_INT,1
DELIMITER,}
UNKNOWN,
NEWLINE,"
"
WHITESPACE,    
UNKNOWN,
NEWLINE,"
"
OPERATOR,@
IDENTIFIER,property
UNKNOWN,
NEWLINE,"
"
KEYWORD,def
WHITESPACE, 
IDENTIFIER,mi_propiedad
DELIMITER,(
IDENTIFIER,self
DELIMITER,)
DELIMITER,:
UNKNOWN,
NEWLINE,"
"
WHITESPACE,    
KEYWORD,return
WHITESPACE, 
NUMBER_INT,42
UNKNOWN,
NEWLINE,"
"
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,resultado
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
IDENTIFIER,len
DELIMITER,(
DELIMITER,[
NUMBER_INT,1
DELIMITER,","
WHITESPACE, 
NUMBER_INT,2
DELIMITER,","
WHITESPACE, 
NUMBER_INT,3
DELIMITER,]
DELIMITER,)
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,print
DELIMITER,(
STRING_F,"f""La longitud es: {resultado}"""
DELIMITER,)
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,valores
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
IDENTIFIER,list
DELIMITER,(
IDENTIFIER,range
DELIMITER,(
NUMBER_INT,10
DELIMITER,)
DELIMITER,)
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,maximo
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
IDENTIFIER,max
DELIMITER,(
IDENTIFIER,valores
DELIMITER,)
UNKNOWN,
NEWLINE,"
"
IDENTIFIER,minimo
WHITESPACE, 
OPERATOR,=
WHITESPACE, 
IDENTIFIER,min
DELIMITER,(
IDENTIFIER,valores
DELIMITER,)
UNKNOWN,
NEWLINE,"
"
